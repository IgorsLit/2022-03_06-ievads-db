Nodarbība 09
Terminu vārdnīca
Data import and export : Datu imports un eksports. Tā ir automātiska vai pusautomātiska datu ievade un izvade starp dažādām programmām. Tā iekļauj sevī datu formāta "tulkošanu", ja aplikācijas izmanto dažādus datu formātus. Datu eksports bieži satur datus neapstrādātā formātā, kas ir nesaprotams un neizlasāms gala lietotājam, ja vien netiek izmantota programmatūra kura ir paredzēta šā konkrētā formāta atpazīšanai un attēlošanai cilvēkam saprotamā veidā.
CSV data format : Komata atdalīto vērtību faila formāts (comma-separated values). CVS formāta fails ir teksta fails, kurš izmanto komatus lai atdalītu atsevišķas vērtības. Katrs faila ieraksts satur vienu vai vairākus laukus, precīzāk, lauku vērtības, kuras ir atdalītas ar komatu. Komata izmantošana deva formāta nosaukumu. Šis formāts parasti satur tabulārus datus (skaitļus, tekstu, datumus) teksta veidā, katrā ierakstā saturot vienādu lauku skaitu. Komata vietā var tikt izmantots cits atdalītājs, piemēram, bieži tas ir semikols.
XML data format : Vienkāršs teksta veida datu formāts strukturētas informācijas atspoguļošanai, kurā var ietilpt dokumenti, dati, konfigurācija u.tt. Nosaukums radies kā saīsinājums no Extensible Markup Language (paplašināma iezīmēšanas valoda). Tas tika attīstīts uz vecāka standarta SGLM (ISO 8879) bāzes ar mērķi radīt piemērotāku WEB izmantošanai formātu. Tas definē noteikumus datu formatēšanai, kā rezultātā rodas fails kas ir saprotams gan cilvēkam, gan datoram.
Database dump : Datubāzes rezerves kopija. Tas ir teksta fails, kurš satur SQL komandu kopu, kuras izpildes rezultātā mērķa datubāzes serverī tiks izveidota pilna datu struktūra, aizpildīta ar datiem. Kopumā to var nosaukt par datubāzes rezerves kopiju loģiskajā līmenī, proti, tā satur visu datubāzes loģiku (objektus, relācijas, datus, kodu utt.), kuru var izmantot datubāzes atjaunošanai datu zaudēšanas notikuma gadījumā. Tāpat to izmanto arī datubāzes kopiju veidošanai.
SQL : Structured Query Language / Strukturētu Vaicājumu Valoda. Tā ir lietošanas apgabalam specifiska programmēšanas valoda. Tā ir projektēta un veidota datu pārvaldīšanai iekš RDBMS. Tā ir sevišķi noderīga strukturētu datu apstrādē, proti, tādu datu, kuri ietver sevī vienības, vērtības un saites (relācijas) starp tām.
Relational Database (Relāciju datubāze) : Digitāla datubāze, balstīta uz relāciju datu modeļa. Relāciju datu modelis ir tāds, kurā dati ir organizēti vienībās, kuras ir savstarpēji saistītas; vārdam relācija tulkojums latviešu valodā varētu būt saite. Relāciju datubāzē vienības ir tabulas, kuras savukārt sastāv no mazākām vienībām -- ierakstiem, kuri sastāv no laukiem (vēl saukti par atribūtiem). Tabulām ir unikālu vērtību lauki, kuri tiek saukti par atslēgām; ar to palīdzību tabulas tiek saistītas savā starpā, proti, ar atslēgu palīdzību tiek uzturētas relācijas.
Database table : Datubāzes tabula. Tā ir saistītu datu kolekcija, kura ir organizēta vertikālu kolonu, jeb lauku un horizontālu ierakstu struktūrā. Lauki tiek identificēti pēc nosaukuma, kuriem jābūt unikāliem tabulas robežās. Tabulā ir ierobežots definēts kolonu skaits, katrai kolonai ir ne tikai savs nosaukums, bet arī datu tips un / vai citi ierobežojumi; ierakstu skaits ir tiešā veidā neierobežots un ir atkarīgs tikai no datubāzes servera konfigurācijas, pieejamas diska vietas u.tml.
CRON : Komandrindas programma Unix-veidīgajās operētājsistēmās, kura nodrošina uzdevumu izpildes plānošanas funkcionalitāti. To parasti izmanto sistēmas administratori ar mērķi ieplānot periodisku programmu izpildi. Tā izmanto speciālu notāciju, lai izveidotu tā saucamu CRON-izteiksmi (expression), kurā ir iekodēts izpildes plāns un periodiskums; šī notācija ir pietiekoši ērta, saprotama un elastīga, lai ieplānotu dažāda veida izpildi, piemēram, reizi stundā noteiktā minūtē, divreiz mēnesī katru pirmo un trešo ceturtdienu, reizi gadā 31.decembrī u.tt.
GIT : programma, kas ir paredzēta izmaiņu atsekošanai un kontrolei jebkurā failu kopā. Parasti tiek izmantota programmatūras izstrādātāju komandās, kurās vairāki izstrādātāji kopā veic koda izstrādi. Šīs programmas galvenie mērķi ir : ātrums; datu integritāte; atbalsts sadalītām, nelineārām plūsmām (tūkstoši paralēlu zaru, uzturētu dažādās sistēmās). Nosaukuma skaidrojumam ir vairākas versijas, bet divas populārākās ir subjektīvi atkarīgas no izmantošanas pieredzes, garastāvokļa un citiem faktoriem :
•	« Global information tracker » (globāls informācijas atsekotājs) : kad viss izdodas, viss strādā un saglabājas korekti.
•	« Goddamn idiotic truckload of sh*t » : pieļauju ka nav vajadzīgs tulkojums, bet ja nu tomēr -- Google translate :). Šis saīsinājums ir spēkā kad viss lūst un plīst, tiek izmestas kļūdas par saglabājama satura konfliktiem un citām problēmām, kas neļauj veikt failu saglabāšanu.
Repository : Repositorijs, repo. Glabāšanas vieta, paredzēta dažāda satura failu uzglabāšanas, versionēšanas un koplietošanas nodrošināšanai; informāciju tehnoloģiju pasaulē visvairāk tie ir programmatūras koda faili. Programmatūras repozitorijs parasti tiek pārvaldīts ar versiju kontroles un vadības sistēmu, piemēram, GIT.
GIT stage : GIT komanda, kas sagatavo vienu vai vairākus failus saglabāšanai (commit). Faili, kuriem ir izpildīta stage komanda, tiek indeksēti un atzīmēti GIT sistēmā (GIT terminoloģijā tie tiek pārvietoti staging apgabalā), lai tā var zināt ka šie faili ir jāiekļauj nākamajā saglabāšana, jeb komītā (commit).
GIT commit : GIT komanda, kas pārvieto sagatavotus saglabāšanai failus no staging apgabala uz saglabāšanas (commit) apgabalu. GIT commit komanda izveido izmaiņu GIT lokalā repozitorijā momentuzņēmumu; vēlāk tās izmaiņas var aizsūtīt (push) galvenajā repozitorijā.
GIT push : GIT komanda, kas aizsūta pēdējās saglabātas izmaiņas (committed changes) no lokāla repozitorija uz galveno attālināto (remote) repozitoriju.
